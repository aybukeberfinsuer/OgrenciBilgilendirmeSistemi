<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>